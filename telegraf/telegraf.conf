[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  round_interval = true
  flush_interval = "10s"
  omit_hostname = true
  # collection_jitter = "5s"

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "telegraf"
  username = "my-user"
  password = "my-password"
  timeout = "10s"
  

# [[outputs.file]]
#   files = ["stdout", "/tmp/metrics.out"]

#####

## Tasmota ##
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["tele/+/SENSOR"]
  data_format = "json"
  json_time_key = "Time"
  json_time_format = "2006-01-02T15:04:05"
  json_string_fields = [ "ENERGY_TotalStartTime" ]
  tag_keys = [ "ENERGY_ID" ]
  name_override = "tasmota_sensor"
  tagexclude = ["host"]
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "tele/+/SENSOR"
    tags = "_/name/_"

[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["tele/+/STATE"]
  data_format = "json"
  json_time_key = "Time"
  json_time_format = "2006-01-02T15:04:05"
  json_string_fields = [ "Uptime","SleepMode","POWER","Wifi_SSId","Wifi_BSSId","Wifi_Downtime" ]
  name_override = "tasmota_state"
  tagexclude = ["host"]
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "tele/+/STATE"
    tags = "_/name/_"

## openDTU ##
[[inputs.mqtt_consumer]]
  name_override = "openDTU"
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "solar/+/status/+",
    "solar/+/0/+",
    "solar/+/1/+",
    "solar/+/2/+"
  ]
  data_format = "value"
  data_type = "float"
  tagexclude = ["host","topic"]
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "solar/+/+/+"
    tags = "_/serial/channel/field"
  [[processors.pivot]]
  tag_key = "field"
  value_key = "value"

# ## not yet published flavour of openDTU
# [[inputs.mqtt_consumer]]
#   name_override = "openDTU"
#   servers = ["tcp://mosquitto:1883"]
#   topics = ["solar/#"]
#   data_format = "value"
#   data_type = "float"
#   tagexclude = ["host","topic"]
#   [[inputs.mqtt_consumer.topic_parsing]]
#     topic = "solar/+/+/+"
#     tags = "_/name/channel/field"
#   [[inputs.mqtt_consumer.topic_parsing]]
#     topic = "solar/+/+"
#     tags = "_/name/field"
#   [[processors.pivot]]
#   tag_key = "field"
#   value_key = "value"


# ## FRITZ Export
# [[inputs.http]]
#   interval = "1m"
#   urls = ["http://fritzexport:9103/metrics"]
#   data_format = "prometheus"
#   name_override = "http_fritzbox"

# ## Openweathermap
# ## replace ABCDEF with your Openweathermap appid, lat and lon with your location
# [[inputs.http]]
#   interval = "10m"
#   urls = [ "https://api.openweathermap.org/data/2.5/weather?lat=50&lon=10&units=metric&appid=ABCDEF" ]
#   data_format = "json"
#   tag_keys = [ "coord_lon", "coord_lat", "sys_country", "id", "name" ]
#   json_string_fields = [ "weather_0_main", "weather_0_description" ]
#   json_time_key = "dt"
#   json_time_format = "unix"
#   name_suffix = "_openweathermap_now"

# ## pollution ##
# [[inputs.http]]
#   interval = "10m"
#   urls = [ "https://api.openweathermap.org/data/2.5/air_pollution?lat=50&lon=10&appid=ABCDEF" ]
#   data_format = "json"
#   tag_keys = [ "coord_lon", "coord_lat" ]
#   json_time_key = "list_0_dt"
#   json_time_format = "unix"
#   name_suffix = "_openweathermap_pollution"

# ## 5d / 3h forecast ##
# [[inputs.http]]
#   interval = "10m"
#   urls = [ "https://api.openweathermap.org/data/2.5/forecast?lat=50&lon=10&appid=ABCDEF&units=metric&lang=de" ]
#   data_format = "json"
#   name_override = "http_openweathermap_5d3h"
#   json_query = "list"
#   json_string_fields = ["weather_0_main","weather_0_description","weather_0_icon"]
#   json_time_key = "dt"
#   json_time_format = "unix"
#   tagexclude = ["host","url"]
#   [inputs.http.tags]
#     id = "2892794"

# # [[inputs.openweathermap]]
# #   interval = "10m"
# #   app_id = "ABCDEF"
# #   city_id = ["2892794"]
# #   lang = "de"
# #   fetch = ["forecast"]
# #   units = "metric"
